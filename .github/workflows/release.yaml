name: release
on:
  push:
    tags:
      - "v*.*.*"
jobs:
  release-windows:
    name: build-windows-${{ matrix.platform }}
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        platform: [ win32, win64 ]
        include:
          - platform: win32
            arch: x86
          - platform: win64
            arch: x64
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v4

    - name: Install UPX
      uses: crazy-max/ghaction-upx@v3
      with:
        install-only: true

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
        architecture: ${{ matrix.arch }}

    - name: Install poetry and dependencies
      uses: ./.github/actions/bootstrap-poetry
      with:
        os: windows

    - name: Build release
      run: poetry run python scripts/build.py --os windows

    - name: Rename artifact
      run: ./scripts/rename-release-file.sh windows

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-assets-${{ matrix.platform }}
        path: ${{ github.workspace }}/doggo-*.exe
        retention-days: 2

#    - name: Publish release
#      uses: softprops/action-gh-release@v2
#      if: startsWith(github.ref, 'refs/tags/')
#      with:
#        files: dist/doggo-*.exe

  release-macos:
    name: build-macos-${{ matrix.platform }}
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ Intel, AppleSilicon ]
        include:
          - platform: Intel
            image: macos-13
          - platform: AppleSilicon
            image: macos-14
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Install poetry and dependencies
      uses: ./.github/actions/bootstrap-poetry
      with:
        os: macos

    - name: Build release
      run: poetry run python scripts/build.py --os macos

    - name: Install create-dmg
      run: brew install create-dmg

    - name: Create dmg file
      run: ./scripts/create-dmg.sh

    - name: Rename artifact
      run: ./scripts/rename-release-file.sh macos

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-assets-${{ matrix.platform }}
        path: ${{ github.workspace }}/doggo-*.dmg
        retention-days: 2
