name: release
on:
  push:
    tags:
      - "v*.*.*"
jobs:
  release-windows:
    name: build-windows-${{ matrix.arch }}
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        platform: [ win32, win64 ]
        include:
          - platform: win32
            arch: x86
          - platform: win64
            arch: x64
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
        architecture: ${{ matrix.arch }}

    - name: Install poetry
      run: curl -sSL https://install.python-poetry.org | python - -y

    - name: Update poetry path
      run: echo "$APPDATA\Python\Scripts" >> $GITHUB_PATH

    - name: Configure poetry
      run: poetry config virtualenvs.in-project true

    - name: Install dependencies
      run: poetry install

    - name: Build release
      run: |
        poetry run python scripts/build.py --os ${{ matrix.platform }}

    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: doggo-windows-${{ matrix.platform }}
        path: ${{ github.workspace }}/dist/doggo-*.exe

#    - name: Publish release
#      uses: softprops/action-gh-release@v2
#      if: startsWith(github.ref, 'refs/tags/')
#      with:
#        files: dist/doggo-*.exe

  release-macos:
    name: build-macos-${{ matrix.arch }}
    runs-on: macos-${{ matrix.os-version }}
    strategy:
      fail-fast: false
      matrix:
        os-version: [ 13, 14 ]
        include:
          - os-version: 13
            arch: x86_64
          - os-version: 14
            arch: aarch64
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Install poetry
      run: curl -sSL https://install.python-poetry.org | python - -y

    - name: Update poetry path
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Configure poetry
      run: poetry config virtualenvs.in-project true

    - name: Install dependencies
      run: poetry install

    - name: Build release
      run: |
        poetry run python scripts/build.py --os macos

    - name: Create DMG
      run: |
        brew install create-dmg
        ./scripts/create-dmg.sh

    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: doggo-macos-${{ matrix.arch }}
        path: ${{ github.workspace }}/doggo-*.dmg
